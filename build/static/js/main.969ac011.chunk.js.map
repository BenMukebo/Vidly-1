{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","components/common/listGroup.jsx","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/utils/paginate.js","components/customers.jsx","components/common/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","movieUrl","id","concat","getMovie","movieId","http","saveMovie","movie","_id","body","Object","objectSpread","getGenres","Pagination","_ref","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","react_default","a","createElement","className","map","page","key","onClick","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","item","style","cursor","defaultProps","tokenKey","_callee","email","password","regenerator_default","wrap","_context","prev","next","sent","data","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","this","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","Like","props","classes","liked","aria-hidden","TableHeader","raiseSort","path","sortColumn","_this","order","onSort","renderSortIcon","column","_this2","columns","label","Component","TableBody","renderCell","content","createKey","_this$props","Table","tableHeader","tableBody","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Link","to","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","selectedCategory","handleDelete","originalMovies","filter","m","setState","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPageData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","_this$getPageData","listGroup","marginBottom","searchBox","moviesTable","pagination","Customers","Rentals","NotFound","NavBar","NavLink","Fragment","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","common_input","common_select","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Redirect","RegisterForm","Logout","ProtectedRoute","component","render","Route","App","lib","navBar","Switch","protectedRoute","components_movies","exact","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.969ac011.chunk.js","sourcesContent":["function init() {}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occured\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndpoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndpoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n\r\n  return http.post(apiEndpoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <div className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n  selectedItem\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => onItemSelect(item)}\r\n          key={item[valueProperty]}\r\n          className={\r\n            item[textProperty] === selectedItem\r\n              ? \"list-group-item active\"\r\n              : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndpoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React from \"react\";\r\n\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      style={{ cursor: \"pointer\" }}\r\n      onClick={props.onClick}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Tilte\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { paginate } from \"./utils/paginate\";\r\nimport Pagination from \"./common/pagination\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport SearchBox from \"./searchBox\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    selectedCategory: \"All Genres\",\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const genres = [{ name: \"All Genres\", _id: \"\" }, ...data];\r\n\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie has already been deleted!\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({\r\n      selectedCategory: genre.name,\r\n      selectedGenre: genre,\r\n      searchQuery: \"\",\r\n      currentPage: 1\r\n    });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  getPageData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      sortColumn,\r\n      selectedCategory,\r\n      genres,\r\n      searchQuery\r\n    } = this.state;\r\n\r\n    const { user } = this.props;\r\n\r\n    const { totalCount, data: movies } = this.getPageData();\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={genres}\r\n            onItemSelect={this.handleGenreSelect}\r\n            selectedItem={selectedCategory}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          {user && (\r\n            <Link\r\n              to=\"/movies/new\"\r\n              className=\"btn btn-primary\"\r\n              style={{ marginBottom: 12 }}\r\n            >\r\n              New Movie\r\n            </Link>\r\n          )}\r\n          <p>\r\n            Showing {movies.length} of {totalCount} movies which are currently\r\n            available to rent.\r\n          </p>\r\n\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n          <MoviesTable\r\n            movies={movies}\r\n            sortColumn={sortColumn}\r\n            onDelete={this.handleDelete}\r\n            onLike={this.handleLike}\r\n            onSort={this.handleSort}\r\n          />\r\n\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            currentPage={currentPage}\r\n            onPageChange={this.handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Page Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        <i className=\"fa fa-forward\" />\r\n      </Link>\r\n      <div className=\"collapse navbar-collapse\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-item nav-link\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      <div className=\"collapse navbar-collapse\">\r\n        <div className=\"navbar-nav ml-auto\">\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-item nav-link\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return null;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton(label) {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInput(name, label, type = \"text\") {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelect(name, label, options) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\"\r\n    },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport * as userService from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .email()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/common/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <main className=\"container\">\n          <ToastContainer />\n          <NavBar user={user} />\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}